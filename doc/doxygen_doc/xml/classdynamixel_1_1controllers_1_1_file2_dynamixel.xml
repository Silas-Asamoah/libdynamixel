<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classdynamixel_1_1controllers_1_1_file2_dynamixel" kind="class" language="C++" prot="public">
    <compoundname>dynamixel::controllers::File2Dynamixel</compoundname>
    <includes refid="file2dynamixel_8hpp" local="no">dynamixel/controllers/file2dynamixel.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a48a1c42e5a5d9816c6fd5a4b617b5d4b" prot="private" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dynamixel::controllers::File2Dynamixel::_recv_buffer_size</definition>
        <argsstring></argsstring>
        <name>_recv_buffer_size</name>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="201" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a93f31ef8be8a27d4da01a23ab3d7e4d9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int dynamixel::controllers::File2Dynamixel::_fd</definition>
        <argsstring></argsstring>
        <name>_fd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="202" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a67d91bee23eaddad7b1752db16800f51" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool dynamixel::controllers::File2Dynamixel::_report_bad_packet</definition>
        <argsstring></argsstring>
        <name>_report_bad_packet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="203" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a9ff507ed75ea792e2fefa4bbb3b71145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dynamixel::controllers::File2Dynamixel::File2Dynamixel</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>File2Dynamixel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="32" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1adc49cde6130371a242f99d09b924fa31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dynamixel::controllers::File2Dynamixel::File2Dynamixel</definition>
        <argsstring>(const std::string &amp;name, int flags)</argsstring>
        <name>File2Dynamixel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="38" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a405baa0d39511e927743c426c6993d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dynamixel::controllers::File2Dynamixel::File2Dynamixel</definition>
        <argsstring>(const std::string &amp;name, int flags, mode_t mode)</argsstring>
        <name>File2Dynamixel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="44" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a10e6303a5e4d76415072f83c8048e865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dynamixel::controllers::File2Dynamixel::File2Dynamixel</definition>
        <argsstring>()</argsstring>
        <name>File2Dynamixel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="50" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a0b96fae42238a5c4c727df0eca5f363f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dynamixel::controllers::File2Dynamixel::~File2Dynamixel</definition>
        <argsstring>()</argsstring>
        <name>~File2Dynamixel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="52" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a1e68d04cdaf13238b6c8cfed0a5ddcf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel::controllers::File2Dynamixel::open_file</definition>
        <argsstring>(const std::string &amp;name, int flags=(O_RDWR|O_CREAT|O_APPEND), mode_t mode=(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH))</argsstring>
        <name>open_file</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>(O_RDWR|O_CREAT|O_APPEND)</defval>
        </param>
        <param>
          <type>mode_t</type>
          <declname>mode</declname>
          <defval>(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="57" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="57" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a52e59b1b366fea5e23672bdd6c424769" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel::controllers::File2Dynamixel::close_file</definition>
        <argsstring>()</argsstring>
        <name>close_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="70" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a6786062337b8089f25f5d7899d18a000" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dynamixel::controllers::File2Dynamixel::is_open</definition>
        <argsstring>()</argsstring>
        <name>is_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="76" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a7d4e1bf3c961bbb85076dea02bb0973c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>off_t</type>
        <definition>off_t dynamixel::controllers::File2Dynamixel::seek</definition>
        <argsstring>(unsigned int offset)</argsstring>
        <name>seek</name>
        <param>
          <type>unsigned int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="78" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a42df7df1aec98cc3a2d7e67a74ec7143" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dynamixel::controllers::File2Dynamixel::send</definition>
        <argsstring>(const InstructionPacket&lt; T &gt; &amp;packet) const </argsstring>
        <name>send</name>
        <param>
          <type>const <ref refid="classdynamixel_1_1_instruction_packet" kindref="compound">InstructionPacket</ref>&lt; T &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="85" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="85" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a1f442be2a853163124752cba55cb74c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel::controllers::File2Dynamixel::send</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet) const </argsstring>
        <name>send</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="106" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="106" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a9406deddb75f65dd427e4e415f49af40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool dynamixel::controllers::File2Dynamixel::recv</definition>
        <argsstring>(StatusPacket&lt; T &gt; &amp;status) const </argsstring>
        <name>recv</name>
        <param>
          <type><ref refid="classdynamixel_1_1_status_packet" kindref="compound">StatusPacket</ref>&lt; T &gt; &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="128" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="128" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1afceda9d7938423c7133a1008436b6dee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel::controllers::File2Dynamixel::set_report_bad_packet</definition>
        <argsstring>(bool report_bad_packet)</argsstring>
        <name>set_report_bad_packet</name>
        <param>
          <type>bool</type>
          <declname>report_bad_packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="190" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a961c4a04cfaff34dd9cb71c098b824ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool dynamixel::controllers::File2Dynamixel::report_bad_packet</definition>
        <argsstring>()</argsstring>
        <name>report_bad_packet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="195" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class to emulate communication with servos.</para><para>By using a file, we can emulate sending packets and receiving them. This class is used for testing and debugging only. </para>    </detaileddescription>
    <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" line="29" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/controllers/file2dynamixel.hpp" bodystart="29" bodyend="204"/>
    <listofallmembers>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a93f31ef8be8a27d4da01a23ab3d7e4d9" prot="private" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>_fd</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a48a1c42e5a5d9816c6fd5a4b617b5d4b" prot="private" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>_recv_buffer_size</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a67d91bee23eaddad7b1752db16800f51" prot="private" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>_report_bad_packet</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a52e59b1b366fea5e23672bdd6c424769" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>close_file</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a9ff507ed75ea792e2fefa4bbb3b71145" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>File2Dynamixel</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1adc49cde6130371a242f99d09b924fa31" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>File2Dynamixel</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a405baa0d39511e927743c426c6993d76" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>File2Dynamixel</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a10e6303a5e4d76415072f83c8048e865" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>File2Dynamixel</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a6786062337b8089f25f5d7899d18a000" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>is_open</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a1e68d04cdaf13238b6c8cfed0a5ddcf4" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>open_file</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a9406deddb75f65dd427e4e415f49af40" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>recv</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a961c4a04cfaff34dd9cb71c098b824ca" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>report_bad_packet</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a7d4e1bf3c961bbb85076dea02bb0973c" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>seek</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a42df7df1aec98cc3a2d7e67a74ec7143" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>send</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a1f442be2a853163124752cba55cb74c6" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>send</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1afceda9d7938423c7133a1008436b6dee" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>set_report_bad_packet</name></member>
      <member refid="classdynamixel_1_1controllers_1_1_file2_dynamixel_1a0b96fae42238a5c4c727df0eca5f363f" prot="public" virt="non-virtual"><scope>dynamixel::controllers::File2Dynamixel</scope><name>~File2Dynamixel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
