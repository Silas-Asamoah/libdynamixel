<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classdynamixel_1_1protocols_1_1_protocol2" kind="class" language="C++" prot="public">
    <compoundname>dynamixel::protocols::Protocol2</compoundname>
    <includes refid="protocol2_8hpp" local="no">dynamixel/protocols/protocol2.hpp</includes>
    <innerclass refid="structdynamixel_1_1protocols_1_1_protocol2_1_1_instructions" prot="public">dynamixel::protocols::Protocol2::Instructions</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43ed" prot="public" static="no">
        <name>DecodeState</name>
        <enumvalue id="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43eda569fcd58d8f9c65c5ee5b5bb1e418631" prot="public">
          <name>INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43edac1f7352bfa26dab3bbc18cd4931ad9f9" prot="public">
          <name>ONGOING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43eda4fdb93754f7b44f8fe28b5a8703bb605" prot="public">
          <name>DONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="37" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="typedef" id="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t dynamixel::protocols::Protocol2::id_t</definition>
        <argsstring></argsstring>
        <name>id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="16" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdynamixel_1_1protocols_1_1_protocol2_1aa7302f20356607bd51e4d4ecf4cb7abf" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t dynamixel::protocols::Protocol2::instr_t</definition>
        <argsstring></argsstring>
        <name>instr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="17" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdynamixel_1_1protocols_1_1_protocol2_1ac5d0ba762aa1f860c0187d9e64982941" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t dynamixel::protocols::Protocol2::address_t</definition>
        <argsstring></argsstring>
        <name>address_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="18" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdynamixel_1_1protocols_1_1_protocol2_1a962ea2a3d9aa7e6ca7cee3e0c38ce383" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t dynamixel::protocols::Protocol2::length_t</definition>
        <argsstring></argsstring>
        <name>length_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="19" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classdynamixel_1_1protocols_1_1_protocol2_1a1b0fd8890068abff759e758b27cf7869" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" kindref="member">id_t</ref></type>
        <definition>const id_t dynamixel::protocols::Protocol2::broadcast_id</definition>
        <argsstring></argsstring>
        <name>broadcast_id</name>
        <initializer>= 0xFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="21" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a552e41e1a1d4b09a9ecee8828b16054e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_instruction</definition>
        <argsstring>(id_t id, instr_t instr)</argsstring>
        <name>pack_instruction</name>
        <param>
          <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" kindref="member">id_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1aa7302f20356607bd51e4d4ecf4cb7abf" kindref="member">instr_t</ref></type>
          <declname>instr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="43" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="43" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1aef8c539be7d18465064babd6071aa4d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_instruction</definition>
        <argsstring>(id_t id, instr_t instr, const std::vector&lt; uint8_t &gt; &amp;parameters)</argsstring>
        <name>pack_instruction</name>
        <param>
          <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" kindref="member">id_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1aa7302f20356607bd51e4d4ecf4cb7abf" kindref="member">instr_t</ref></type>
          <declname>instr</declname>
        </param>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="69" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="69" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a6fb8c6abd45e66e76ba1095dda39fd43" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_data</definition>
        <argsstring>(uint8_t data)</argsstring>
        <name>pack_data</name>
        <param>
          <type>uint8_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="100" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1ad32eb0deddb032c8ce2699c78226b27c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_data</definition>
        <argsstring>(uint16_t data)</argsstring>
        <name>pack_data</name>
        <param>
          <type>uint16_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="107" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a0eb7e2bd3eae8762f35afeb41645dc24" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_data</definition>
        <argsstring>(uint32_t data)</argsstring>
        <name>pack_data</name>
        <param>
          <type>uint32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="115" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a52d75d68d6a1e2e1128af0cf2cf22073" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>static std::vector&lt;uint8_t&gt; dynamixel::protocols::Protocol2::pack_data</definition>
        <argsstring>(int32_t data)</argsstring>
        <name>pack_data</name>
        <param>
          <type>int32_t</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="125" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a8843f0f969caf4bedcc8eafea37988cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamixel::protocols::Protocol2::unpack_data</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet, uint8_t &amp;res)</argsstring>
        <name>unpack_data</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>uint8_t &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="135" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1ae411e8059b3a39500350da03dc4cdf9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamixel::protocols::Protocol2::unpack_data</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet, uint16_t &amp;res)</argsstring>
        <name>unpack_data</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>uint16_t &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="142" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a9d1fc28953848b42e73a41012a78ad67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamixel::protocols::Protocol2::unpack_data</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet, uint32_t &amp;res)</argsstring>
        <name>unpack_data</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="149" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1aa9d44d665a21833f29b438efaec5d30f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dynamixel::protocols::Protocol2::unpack_data</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet, int32_t &amp;res)</argsstring>
        <name>unpack_data</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type>int32_t &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="156" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1adb5a8db2d554a4ee83f069f690d41f30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43ed" kindref="member">DecodeState</ref></type>
        <definition>static DecodeState dynamixel::protocols::Protocol2::unpack_status</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet, id_t &amp;id, std::vector&lt; uint8_t &gt; &amp;parameters, bool throw_exceptions=false)</argsstring>
        <name>unpack_status</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <param>
          <type><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" kindref="member">id_t</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>throw_exceptions</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decodes the content of a status packet received from the servos</para><para><simplesect kind="see"><para><ref refid="classdynamixel_1_1protocols_1_1_protocol2_1adb5a8db2d554a4ee83f069f690d41f30" kindref="member">unpack_status</ref> in <ref refid="protocol1_8hpp" kindref="compound">protocol1.hpp</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="168" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="168" bodyend="253"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1a26a167d1714ceecd0acb93e4d10288ee" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool dynamixel::protocols::Protocol2::detect_status_header</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet)</argsstring>
        <name>detect_status_header</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the packet contains a header.</para><para><simplesect kind="see"><para>detect_status_header in <ref refid="protocol1_8hpp" kindref="compound">protocol1.hpp</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet</parametername>
</parameternamelist>
<parameterdescription>
<para>data of the received packet</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if and only if a full header was found at the beginning of the packet </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="265" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="265" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel_1_1protocols_1_1_protocol2_1aa3d96d1eda8ce6f26c0c8d200d0270dd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t dynamixel::protocols::Protocol2::_checksum</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;packet)</argsstring>
        <name>_checksum</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>packet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="276" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="276" bodyend="319"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" line="14" column="1" bodyfile="/tmp/doc_dynamixel/libdynamixel/src/dynamixel/protocols/protocol2.hpp" bodystart="14" bodyend="320"/>
    <listofallmembers>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1aa3d96d1eda8ce6f26c0c8d200d0270dd" prot="private" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>_checksum</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ac5d0ba762aa1f860c0187d9e64982941" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>address_t</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a1b0fd8890068abff759e758b27cf7869" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>broadcast_id</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43ed" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>DecodeState</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a26a167d1714ceecd0acb93e4d10288ee" prot="private" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>detect_status_header</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43eda4fdb93754f7b44f8fe28b5a8703bb605" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>DONE</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a38d9cae72cd86213cca74e718c240429" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>id_t</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1aa7302f20356607bd51e4d4ecf4cb7abf" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>instr_t</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43eda569fcd58d8f9c65c5ee5b5bb1e418631" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>INVALID</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a962ea2a3d9aa7e6ca7cee3e0c38ce383" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>length_t</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ab779d109a8aeea8e2de436f6d23b43edac1f7352bfa26dab3bbc18cd4931ad9f9" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>ONGOING</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a6fb8c6abd45e66e76ba1095dda39fd43" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ad32eb0deddb032c8ce2699c78226b27c" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a0eb7e2bd3eae8762f35afeb41645dc24" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a52d75d68d6a1e2e1128af0cf2cf22073" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a552e41e1a1d4b09a9ecee8828b16054e" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_instruction</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1aef8c539be7d18465064babd6071aa4d6" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>pack_instruction</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a8843f0f969caf4bedcc8eafea37988cf" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>unpack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1ae411e8059b3a39500350da03dc4cdf9b" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>unpack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1a9d1fc28953848b42e73a41012a78ad67" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>unpack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1aa9d44d665a21833f29b438efaec5d30f" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>unpack_data</name></member>
      <member refid="classdynamixel_1_1protocols_1_1_protocol2_1adb5a8db2d554a4ee83f069f690d41f30" prot="public" virt="non-virtual"><scope>dynamixel::protocols::Protocol2</scope><name>unpack_status</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
